# https://gist.github.com/andreyvit/2921703 # Ring the bell if any background window rang a bell set -g bell-action any unbind C-h unbind C-j unbind C-k unbind C-l #### COLOUR (Solarized 256) # default statusbar colors set-option -g status-bg colour235 #base02 set-option -g status-fg colour136 #yellow set-option -g status-attr default # default window title colors set-window-option -g window-status-fg colour244 #base0 set-window-option -g window-status-bg default #set-window-option -g window-status-attr dim 
# command/message line colors

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange
 
# clock
set-window-option -g clock-mode-colour colour64 #green
# color
set -g default-terminal "xterm-256color"
 
# set-option -g default-command "reattach-to-user-namespace -l $SHELL -l"
# set-option -g default-command "reattach-to-user-namespace -l zsh"
set-window-option -g automatic-rename on

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# set first window to index 1 (not 0) to map more to the keyboard layout...
set -g base-index 1
setw -g pane-base-index 1
 
# color scheme (styled as vim-powerline)
set -g status-left-length 52
set -g status-right-length 451
set -g status-fg white
set -g status-bg colour234
#set -g pane-border-fg colour245
set -g status-left '#[fg=colour235,bg=colour252,bold] ❐ #P #[fg=colour252,bg=colour238,nobold]⮀#[fg=colour245,bg=colour238,bold] #(whoami) #[fg=colour238,bg=colour234,nobold]⮀'
set -g status-right '#[fg=colour235,bg=colour252,bold] ❐ #P #[fg=colour252,bg=colour238,nobold]⮀#[fg=colour245,bg=colour238,bold] #(whoami) #[fg=colour238,bg=colour234,nobold]⮀'
set -g window-status-format "#[fg=colour235,bg=colour252,bold] #I #W "
set -g window-status-current-format "#[fg=colour234,bg=colour39]⮀#[fg=black,bg=colour39,noreverse,bold] #I: #W #[fg=colour39,bg=colour234,nobold]⮀"
 
# Patch for OS X pbpaste and pbcopy under tmux.

# setup 'v' to begin selection as in Vim
bind-key -Tcopy-mode-vi 'r' send -X rectangle-toggle
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'V' send -X select-line
bind-key -Tcopy-mode-vi 'Y' send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -Tcopy-mode-vi 'y' send -X copy-pipe "reattach-to-user-namespace pbcopy"

bind-key p paste-buffer
 
unbind -Tcopy-mode-vi Enter
bind-key -Tcopy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -Tcopy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
 
set -g status-interval 5
 
# Screen like binding
# C-b is not acceptable -- Emacs uses it
set-option -g prefix C-]

bind-key C-] last-window
bind-key C-[ next-window
bind-key C-p previous-window
bind-key C-o select-pane -t :.-

bind-key -n M-'}' next-window
bind-key -n M-'{' previous-window

bind-key k send-keys C-l \; clear-history

bind-key -n M-1 select-pane -t 1
bind-key -n M-2 select-pane -t 2
bind-key -n M-3 select-pane -t 3
bind-key -n M-4 select-pane -t 4
# bind-key -n F7 select-pane -t 7

# broadcast input
bind-key i set-window-option synchronize-panes on
bind-key u set-window-option synchronize-panes off

# bind-key -n M-` copy-mode
bind-key Escape copy-mode
bind-key -n M-0 copy-mode

setw -g monitor-activity on
set -g visual-activity on

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# No escape time for vi mode
set -sg escape-time 0

setw -g aggressive-resize on

# Bigger history
set -g history-limit 100000

# auto window rename
# set-window-option -g automatic-rename

# scroll
set -g terminal-overrides 'xterm-256color*:smcup@:rmcup@'

# Use vim keybindings in copy mode
# setw -g mode-keys emacs
setw -g mode-keys vi

bind-key          S choose-window "join-pane -v -s "%%""
bind-key          V choose-window "join-pane -h -s "%%""
 
# Ctrl-Left/Right cycles thru windows (no prefix)
bind-key -n "C-Left"  select-window -t :-
bind-key -n "C-Right" select-window -t :+

# Ctrl-Up/Down cyles thru panes (no prefix)
bind-key -n "C-Up"   select-pane -t :.-
bind-key -n "C-Down" select-pane -t :.+

bind-key up resize-pane -U 15
bind-key down resize-pane -D 15
bind-key left resize-pane -L 10
bind-key right resize-pane -R 10

bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# Mouse support ------------------------------------------------
#  set -g mouse on
#  
#  bind-key -T copy-mode-vi WheelUpPane send -X scroll-up
#  bind-key -T copy-mode-vi WheelDownPane send -X scroll-down
#  
#  # # Vi copypaste
#  setw -g mode-keys vi
#  bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
#  bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy" \; display-message "highlighted selection copied to system clipboard"

# End Mouse support -----------
