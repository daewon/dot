# Ring the bell if any background window rang a bell
set -g bell-action any

# color
set -g default-terminal "xterm-256color"

set-option -g default-command "reattach-to-user-namespace -l $SHELL -l"
# set-option -g default-command "reattach-to-user-namespace -l zsh"
set-window-option -g automatic-rename on

set-option -g status-utf8 on
set -g utf8
set-window-option -g utf8 on

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
# bind-key a send-prefix

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# set first window to index 1 (not 0) to map more to the keyboard layout...
set -g base-index 1
setw -g pane-base-index 1

# color scheme (styled as vim-powerline)
set -g status-left-length 52
set -g status-right-length 451
set -g status-fg white
set -g status-bg colour234
set -g pane-border-fg colour245
set -g pane-active-border-fg colour39
set -g message-fg colour16
set -g message-bg colour221
set -g message-attr bold
set -g status-left '#[fg=colour235,bg=colour252,bold] ❐ #P #[fg=colour252,bg=colour238,nobold]⮀#[fg=colour245,bg=colour238,bold] #(whoami) #[fg=colour238,bg=colour234,nobold]⮀'
# set -g status-right '#[fg=colour235,bg=colour252,bold] ❐ #P #[fg=colour252,bg=colour238,nobold]⮀#[fg=colour245,bg=colour238,bold] #(whoami) #[fg=colour238,bg=colour234,nobold]⮀'
set -g window-status-format "#[fg=colour235,bg=colour252,bold] #I #W "
#set -g window-status-current-format "#[fg=colour234,bg=colour39]⮀#[fg=colour25,bg=colour39,noreverse,bold] #I ⮁ #W #[fg=colour39,bg=colour234,nobold]⮀"
#set -g window-status-current-format "#[fg=colour234,bg=colour39]⮀#[fg=black,bg=colour39,noreverse,bold] #I ⮁ #W #[fg=colour39,bg=colour234,nobold]⮀"
set -g window-status-current-format "#[fg=colour234,bg=colour39]⮀#[fg=black,bg=colour39,noreverse,bold] #I: #W #[fg=colour39,bg=colour234,nobold]⮀"

# Patch for OS X pbpaste and pbcopy under tmux.
# set-option -g default-command "reattach-to-user-namespace -l zsh"
setw -g mode-keys vi

# setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# update default binding of 'Enter' to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
# set -g status-interval 5

# Screen like binding
# C-b is not acceptable -- Emacs uses it
set-option -g prefix C-]
set-option -gw xterm-keys on

bind-key C-] last-window
bind-key C-[ next-window
bind-key C-p previous-window
# bind-key -n M-] last-window

bind-key C-]-n next
bind-key C-]-p prev

bind-key -n M-] next-window
bind-key -n M-[ previous-window

# bind-key -n M-[ select-pane -t :.-
bind-key C-]-o select-pane -t :.-
# bind-key -n M-] select-pane -t :.+

bind-key -n F1 select-pane -t 1
bind-key -n F2 select-pane -t 2
bind-key -n F3 select-pane -t 3
bind-key -n F4 select-pane -t 4
bind-key -n F5 select-pane -t 5
bind-key -n F6 select-pane -t 6
bind-key -n F7 select-pane -t 7

# broadcast input
bind-key i set-window-option synchronize-panes on
bind-key u set-window-option synchronize-panes off

# bind-key -n M-` copy-mode
bind-key Escape copy-mode

setw -g monitor-activity on

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# No escape time for vi mode
set -sg escape-time 0

setw -g mode-mouse on
set-option -g mouse-select-pane on
setw -g aggressive-resize on
set -g mouse-select-pane on

# Bigger history
set -g history-limit 100000

# auto window rename
# set-window-option -g automatic-rename

# scroll
set -g terminal-overrides 'xterm-256color*:smcup@:rmcup@'

# Use vim keybindings in copy mode
setw -g mode-keys vi
#
# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
#
# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# PREFIX : resize-pane (By default it resizes the current pane down)
# PREFIX : resize-pane -U (Resizes the current pane upward)
# PREFIX : resize-pane -L (Resizes the current pane left)
# PREFIX : resize-pane -R (Resizes the current pane right)
# PREFIX : resize-pane 20 (Resizes the current pane down by 20 cells)
# PREFIX : resize-pane -U 20 (Resizes the current pane upward by 20 cells)
# PREFIX : resize-pane -L 20 (Resizes the current pane left by 20 cells)
# PREFIX : resize-pane -R 20 (Resizes the current pane right by 20 cells)
# PREFIX : resize-pane -t 2 20 (Resizes the pane with the id of 2 down by 20 cells)
# PREFIX : resize-pane -t -L 20 (Resizes the pane with the id of 2 left by 20 cells)
